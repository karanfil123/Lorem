// <auto-generated />
using System;
using Lorem.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lorem.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lorem.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(786),
                            Name = "Name Category 1",
                            UpdatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(797)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(798),
                            Name = "Name Category 2",
                            UpdatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(799)
                        });
                });

            modelBuilder.Entity("Lorem.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(1525),
                            Name = "Test 1",
                            Price = 34m,
                            Stock = 120,
                            UpdatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(1528)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(1529),
                            Name = "Test 2",
                            Price = 74m,
                            Stock = 420,
                            UpdatedDate = new DateTime(2023, 8, 12, 13, 56, 7, 61, DateTimeKind.Local).AddTicks(1529)
                        });
                });

            modelBuilder.Entity("Lorem.Core.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Red",
                            Height = "4 metre",
                            ProductId = 1,
                            Width = "2 metre"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            Height = "178mm",
                            ProductId = 2,
                            Width = "50mm"
                        });
                });

            modelBuilder.Entity("Lorem.Core.Entities.Product", b =>
                {
                    b.HasOne("Lorem.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Lorem.Core.Entities.ProductFeature", b =>
                {
                    b.HasOne("Lorem.Core.Entities.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("Lorem.Core.Entities.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lorem.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Lorem.Core.Entities.Product", b =>
                {
                    b.Navigation("ProductFeature")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
